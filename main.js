(()=>{'use strict';function e(e){const t=e;return{getName:()=>t,createGameBoard:(...e)=>{const t=function(){let e={A1:!1,A2:!1,A3:!1,A4:!1,A5:!1,A6:!1,A7:!1,A8:!1,B1:!1,B2:!1,B3:!1,B4:!1,B5:!1,B6:!1,B7:!1,B8:!1,C1:!1,C2:!1,C3:!1,C4:!1,C5:!1,C6:!1,C7:!1,C8:!1,D1:!1,D2:!1,D3:!1,D4:!1,D5:!1,D6:!1,D7:!1,D8:!1,E1:!1,E2:!1,E3:!1,E4:!1,E5:!1,E6:!1,E7:!1,E8:!1,F1:!1,F2:!1,F3:!1,F4:!1,F5:!1,F6:!1,F7:!1,F8:!1,G1:!1,G2:!1,G3:!1,G4:!1,G5:!1,G6:!1,G7:!1,G8:!1,H1:!1,H2:!1,H3:!1,H4:!1,H5:!1,H6:!1,H7:!1,H8:!1},t=[];const r=(...e)=>{const r=function(...e){let t=e;const r={1:'Spy',2:'Destroyer',3:'Cruiser',4:'Battleship',5:'Carrier'}[t.length];return{getShipName:()=>r,getShipCoord:()=>t,isSunkNextHit:()=>1===t.length,removeSquareHit:e=>{const r=(e=>t.indexOf(e))(e);t=t.filter((e=>t.indexOf(e)!==r))}}}(...e);return t=n(r),o(r),r},o=t=>{const r=t.getShipCoord();let o=0;for(const[t]of Object.entries(e))t===r[o]&&(e[t]=!0,o++)},n=e=>[...t,e],a=t=>Object.assign({...e},{[`${t}`]:'Hit'}),i=e=>{const r=s(e);return t.filter((e=>t.indexOf(e)!==r))},s=e=>t.findIndex((t=>t.getShipName()===e.getShipName()));return{getBoardGrid:()=>e,getBoardShips:()=>t,createShip:r,populateGameboard:e=>{let t=0;for(;t<e.length;)r(...e[t]),t++},receiveAttackFromPlayer:(r='A1')=>{const o=r;if(!(t=>{for(const[r]of Object.entries(e))if(r===t&&e[r])return!0;return!1})(o))return o;{const r=(e=>t.find((t=>t.getShipCoord().includes(e))))(o);r.isSunkNextHit()?t=i(r):e=((e,t)=>(t.removeSquareHit(e),a(e)))(o,r)}},removeShipFromShipsArray:i,isAllShipsSunk:()=>0===t.length}}();return t.populateGameboard(e),t},sendAttackCoordsToGame:(e='A1')=>e,sendRandomAttackCoordsToGame:e=>{const t=Object.keys(e.getBoardGrid()).length,r=(o=0,n=t,Math.floor(Math.random()*(o-n))+n);var o,n;return Object.keys(e.getBoardGrid())[r]}}}(function(){const t=(e,t)=>playerInTurn===t?e:t,r=(e,t,r)=>playerInTurn===e?t:r;return{setupGame:()=>{let o=a,n=c;const a=e('Victor'),i=e('Olga'),s=a.createGameBoard(['A1'],['B1','B2'],['C1','C2','C3'],['D1','D2','D3','D4'],['E1','E2','E3','E4','E5']),c=i.createGameBoard(['A1'],['B1','B2'],['C1','C2','C3'],['D1','D2','D3','D4'],['E1','E2','E3','E4','E5']);for(;!a.isPlayerDefeated()||!i.isPlayerDefeated();){const e=o.sendAttackCoordsToGame('A1');n.receiveAttackFromPlayer(e),n.isAllShipsSunk(),n.sendStateToDOM(),o=t(a,i),n=r(s,c)}}}})().setupGame()})()
//# sourceMappingURL=data:application/json;charset=utf-8;base64,